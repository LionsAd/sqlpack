#!/bin/bash

# SQLPack - Database Export/Import Utility
# Main dispatcher script for subcommands

set -euo pipefail

# Get the directory where this script is located
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Check if we're running from installed location or development
if [[ -d "$SCRIPT_DIR/../lib/sqlpack/commands" ]]; then
    # Installed location: /usr/local/bin/sqlpack -> /usr/local/lib/sqlpack/commands
    COMMANDS_DIR="$SCRIPT_DIR/../lib/sqlpack/commands"
else
    # Development location: ./sqlpack -> ./commands
    COMMANDS_DIR="$SCRIPT_DIR/commands"
fi

# Version information
VERSION="1.0.0"

# Show usage information
show_usage() {
    cat << EOF
SQLPack - Database Export/Import Utility

USAGE:
    sqlpack <command> [options...]

COMMANDS:
    export        Export database schema and data
    import        Import database from archive
    export-data   Export data using BCP (advanced)
    version       Show version information
    help          Show this help message

For command-specific help, run:
    sqlpack <command> --help

EXAMPLES:
    sqlpack export --server localhost,1433 --database mydb
    sqlpack import --archive db-dump.tar.gz --database newdb
    sqlpack export-data --server localhost,1433 --database mydb --data-dir ./data --tables-file tables.txt

LOGGING:
    BASH_LOG            Log level: error, warn, info, debug, trace (default: error)
    BASH_LOG_TIMESTAMP  Add timestamps: true/false (default: false)

COMMON ENVIRONMENT VARIABLES:
    DB_USERNAME     Default username
    DB_PASSWORD     Default password

EXPORT ENVIRONMENT VARIABLES:
    DB_SERVER       Default SQL Server instance
    DB_NAME         Default database name
    DB_EXPORT_DIR   Default export directory
    DB_ARCHIVE_NAME Default archive filename

EOF
}

# Show version information
show_version() {
    echo "SQLPack version $VERSION"
}

# Check if command exists and is executable
command_exists() {
    local command_file="$COMMANDS_DIR/$1.sh"
    [[ -x "$command_file" ]]
}

# Execute a command
execute_command() {
    local command="$1"
    shift
    local command_file="$COMMANDS_DIR/$command.sh"

    if ! command_exists "$command"; then
        echo "Error: Unknown command '$command'" >&2
        echo "Run 'sqlpack help' to see available commands." >&2
        exit 1
    fi

    exec "$command_file" "$@"
}

# Main logic
if [[ $# -eq 0 ]]; then
    show_usage
    exit 1
fi

case "${1:-}" in
    export|import|export-data)
        execute_command "$@"
        ;;
    version|--version|-v)
        show_version
        ;;
    help|--help|-h)
        show_usage
        ;;
    *)
        echo "Error: Unknown command '${1:-}'" >&2
        echo "Run 'sqlpack help' to see available commands." >&2
        exit 1
        ;;
esac
